<%- include("./../partials/header.ejs") %>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 20px;
    }

    h1 {
        color: #333;
        text-align: center;
    }

    form {
        background: #ffffff;
        border-radius: 10px;
        padding: 20px;
        max-width: 600px;
        margin: 0 auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    label {
        display: block;
        margin-bottom: 8px;
        font-weight: bold;
        color: #555;
    }

    select, textarea, input[type="file"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-family: Arial, sans-serif;
        font-size: 14px;
    }

    textarea {
        height: 100px;
        resize: vertical;
    }

    input[type="file"] {
        border: none;
        padding: 5px;
    }

    .label-option {
        display: inline-block;
        margin-right: 10px;
        text-align: center;
    }

    .label-option img {
        border: 2px solid #ddd;
        border-radius: 5px;
        transition: border-color 0.3s ease;
    }

    .label-option input[type="radio"] {
        display: none;
    }

    .label-option input[type="radio"]:checked + label img {
        border-color: #007bff;
    }

    .toggle-container {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 25px;
        margin-right: 10px;
    }

    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ddd;
        border-radius: 25px;
        transition: 0.4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 19px;
        width: 19px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        border-radius: 50%;
        transition: 0.4s;
    }

    input:checked + .slider {
        background-color: #007bff;
    }

    input:checked + .slider:before {
        transform: translateX(25px);
    }

    .toggle-label {
        font-weight: bold;
        color: #555;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        width: 100%;
        margin-top: 20px;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #0056b3;
    }
</style>


<form id="createLabelForm" action="/create-label" method="POST" enctype="multipart/form-data">

    <div>
        <label for="labelName">Label Name:</label>
        <input type="text" name="labelName" id="labelName" required maxlength="15">
    </div>
    

    <label for="contentType">Select Content Type:</label>
    <select name="contentType" id="contentType" required>
        <option value="text">Text</option>
        <option value="image">Image</option>
        <option value="audio">Audio</option>
    </select>

    <div id="textContentInput">
        <label for="textContent">Enter Text Content:</label>
        <textarea name="textContent" id="textContent"></textarea>
    </div>

    <div id="imageContentInput" style="display: none;">
        <label for="imageContent">Upload Image:</label>
        <input type="file" name="imageContent" id="imageContent" accept="image/*">
    </div>

    <div id="audioContentInput" style="display: none;">
        <label for="audioContent">Upload Audio:</label>
        <input type="file" name="audioContent" id="audioContent" accept="audio/*">
    </div>

    <div id="labelDesigns">
        <label for="labelDesign">Choose Label Design:</label>
        <div class="label-option">
            <input type="radio" id="label1" name="labelDesign" value="label1" required>
            <label for="label1">
                <img src="/background-images/label-image-black.png" alt="Label Design 1" width="100" height="100">
            </label>
        </div>
        <div class="label-option">
            <input type="radio" id="label2" name="labelDesign" value="label2" required>
            <label for="label2">
                <img src="/background-images/label-image-yellow.png" alt="Label Design 2" width="100" height="100">
            </label>
        </div>
        <div class="label-option">
            <input type="radio" id="label3" name="labelDesign" value="label3" required>
            <label for="label3">
                <img src="/background-images/label-image-gray.png" alt="Label Design 3" width="100" height="100">
            </label>
        </div>
    </div>

    <div class="toggle-container">
        <label class="toggle-switch">
            <input type="checkbox" name="isLabelPrivate" id="userOption" value="on">
            <span class="slider"></span>
        </label>
        <span class="toggle-label">Private label</span>
    </div>
    
    <div id="error-message" style="color: red;"></div>
    <button type="submit">Create Label</button>
</form>

<script>
    const contentTypeSelect = document.getElementById("contentType");
    const textContentInput = document.getElementById("textContentInput");
    const imageContentInput = document.getElementById("imageContentInput");
    const audioContentInput = document.getElementById("audioContentInput");

    contentTypeSelect.addEventListener("change", function() {
        if (this.value === "text") {
            textContentInput.style.display = "block";
            imageContentInput.style.display = "none";
            audioContentInput.style.display = "none";
        } else if (this.value === "image") {
            textContentInput.style.display = "none";
            imageContentInput.style.display = "block";
            audioContentInput.style.display = "none";
        } else if (this.value === "audio") {return res.status(400).json({ message: 'Label name must be unique. This label name already exists.' });
            textContentInput.style.display = "none";
            imageContentInput.style.display = "none";
            audioContentInput.style.display = "block";
        }
    });


    const form = document.getElementById('createLabelForm');
form.addEventListener('submit', async function (event) {
    event.preventDefault(); // Prevent default form submission

    const formData = new FormData(form);

try {
    const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
    });

    if (!response.ok) {
        // If the server returns an error, extract and display the message
        const result = await response.text();
        document.getElementById('error-message').textContent = result;
    } else {
        // Proceed with the redirection that your backend handles (no additional code needed here)
        window.location.href = response.url; // Redirect as intended by backend
    }
} catch (error) {
    document.getElementById('error-message').textContent = 'An unexpected error occurred. Please try again.';
}
});

</script>
<%- include("./../partials/footer.ejs") %>
